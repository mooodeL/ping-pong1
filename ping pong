from pygame import *



win_width = 600
win_height = 500

window = display.set_mode((win_width, win_height))
background = (200,255,255)
window.fill(background)

game=True
finish=False
clock=time.Clock()


class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (65, 65))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update_l(self):
        keys=key.get_pressed()
        if keys[K_w] and self.rect.y>5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_height - 80:
            self.rect.y += self.speed
    def update_r(self):
        keys=key.get_pressed()
        if keys[K_UP] and self.rect.y>5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed


racket1=Player('rocket.png',30,200, 4, 50, 10)
racket2=Player('rocket.png',520,200, 4, 50, 10)
ball=GameSprite('asteroid.png',200,200,4,50,5)

speed_x=3
speed_y=3
font.init()
font1=font.Font(None, 35)
lose1=font1.render('PLAYER 1 LOSE!',True,(180,0,0))
lose2=font1.render('PLAYER 2 LOSE!',True,(180,0,0))

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish !=True:
        window.fill(background)
        racket1.update_l()
        racket2.update_r()
        ball.rect.x+=speed_x
        ball.rect.y+=speed_y

    if ball.rect.y<0 or ball.rect.y>400:
        speed_y*=-1

    if sprite.collide_rect(racket1,ball) or sprite.collide_rect(racket2,ball):
        speed_x*=-1
        speed_y*=1
    
    if ball.rect.x<0:
        finish=True
        window.blit(lose1,(200,200))

    if ball.rect.x>600:
        finish=True
        window.blit(lose2,(200,200))

    racket1.reset()
    racket2.reset()
    ball.reset()










    display.update()
    clock.tick(60)
